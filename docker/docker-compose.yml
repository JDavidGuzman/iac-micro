version: "3"
services:
  ansible:
    container_name: ansible
    build:
        context: .
    volumes:
      - ../ansible/:/home/ansible/
      - ../vagrant/keys/key:/home/vagrant/keys/key
      - ../terraform/keys/key:/home/terraform/keys/key
    networks:
      - ansible
    working_dir: /home/ansible/
    environment:
      - ANSIBLE_HOST_KEY_CHECKING=False
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
  
  nginx_lb:
    container_name: nginx_lb
    image: nginx:1.19.10-alpine
    networks:
      - balancer
    ports:
      - "6443:6443"
    volumes:
      - ../nginx/nginx_lb.conf:/etc/nginx/nginx.conf
    entrypoint: ['nginx','-g','daemon off;']
  
  terraform:
    image: hashicorp/terraform:0.15.3
    volumes:
    - ../terraform:/infra
    working_dir: /infra
    networks:
      - terraform
    environment:
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
  
networks:
  ansible:
  balancer:
    ipam:
      config:
        - subnet: 172.18.0.1/24
  terraform: